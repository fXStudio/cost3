package com.ruling.cost.hours.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ruling.cost.hours.domain.Hour;
import com.ruling.cost.hours.service.HoursManager;
import com.ruling.cost.subsidy.domain.Subsidy;
import com.ruling.cost.util.dao.ObjectDao;
@SuppressWarnings("unchecked")
public class HoursManagerImpl implements HoursManager {
	ObjectDao objDao;

	public void setObjDao(ObjectDao objDao) {
		this.objDao = objDao;
	}


	public List getallHoursManager(Integer userid,String[] arr) {
		String hql="";
		if(null==arr[0]){
			String date = getnowDateManager().split("-")
			[0].toString() + "-" + getnowDateManager().split("-")[1].toString()
			+ "-01";
			hql=" from Hour where userid=? and todaydate>='"+date+"'and todaydate<='"+getnowDateManager()+"'";
		}else{
			hql=" from Hour where userid=? and todaydate>='"+arr[0]+"'and todaydate<='"+arr[1]+"'";
		}
		Object[] values = { userid };
		return objDao.getByParm(hql, values);
	}

	public void addHoursManager(Hour h) {
		objDao.save(h);
	}

	public void updateHoursManager(Hour h) {
		objDao.update(h);

	}

	public Hour getHourById(Integer id) {
		return (Hour) objDao.getById(Hour.class, id);

	}

	public String getnowDateManager() {
		return objDao.getsysdate();
	}

	public List getItmeidlistManager(int userid, String
	starttime, String endtime) {
		String hql = "";
		String date = getnowDateManager().split("-")

		[0].toString() + "-" + getnowDateManager().split("-")[1].toString()

		+ "-01";
		Object[] values = { userid };
		if (date.equals(starttime)) {
			hql = "select  distinct  itmeid from Hour where userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + endtime + "'";
		} else {
			hql = "select  distinct  itmeid from Hour where userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + endtime + "'";
		}

		return objDao.getByParm(hql, values);

	}

	public List getweekhoursManager(int itmeid, int

	userid, String starttime, String endtime) {
		String hql = "";
		String date = getnowDateManager().split("-")[0].toString() + "-"
				+ getnowDateManager().split("-")[1].toString() + "-01";
		Object[] values = {itmeid, userid };
		if (date.equals(starttime)) {
			hql = "select hour from Hour where  itmeid=? and userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + endtime + "'";
		} else {
			hql = "select hour from Hour where  itmeid=? and userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + endtime + "'";
		}
		return objDao.getByParm(hql, values);
	}

	public void deleteHouserbyTime(int userid, String startime, String endtime) {
		String hql = "from Hour where  userid=? and todaydate>='" + startime
				+ "' and todaydate<'" + endtime + "'";
		Object[] values = { userid };
		List list = objDao.getByParm(hql, values);
		if (null != list && 0 != list.size()) {
			for (int i = 0; i < list.size(); i++) {
				objDao.delete(list.get(i));
			}
		}

	}

	public List getItmesidByuserid(Integer userid) {
		Object[] values = { userid };
		String hql = "from ItemUser where userid=?";
		return objDao.getByParm(hql, values);
	}

	public List getalluser() {
		return objDao.getAll("User");
	}

	public int gethoursByuseriditemid(int userid, int itemid,String[] arr) {
		int a=0;
		String hql="";
		if(null==arr[0]){
			String date = getnowDateManager().split("-")
			[0].toString() + "-" + getnowDateManager().split("-")[1].toString()
			+ "-01";
			 hql = "from Hour where  userid=? and itmeid=? and todaydate>='"+date+"' and todaydate<='"+getnowDateManager()+"'";
		}else{
			 hql = "from Hour where  userid=? and itmeid=? and todaydate>='"+arr[0]+"' and todaydate<='"+arr[1]+"'";
		}
		Object[] values = { userid, itemid };
	     List list=objDao.getByParm(hql, values);
	    if(null!=list&&0!=list.size()){
		for(int i=0;i<list.size();i++){
			Hour h=(Hour) list.get(i);
			int b=Integer.parseInt(h.getHour());
			a+=b;
		}
	}
		return a;
	}

	public int getHourByuseridtime(int userid, String date) {
		Object[] values = {userid,date};
		int a=0;
		String hql = "from Hour where  userid=? and todaydate=?";
	List list=objDao.getByParm(hql, values);
	if(null!=list&&0!=list.size()){
		for(int i=0;i<list.size();i++){
			Hour h=(Hour) list.get(i);
			int b=Integer.parseInt(h.getHour());
			a+=b;
		}
	}
		return a;
	}

	public List getHourByitemslistbyuseridweek(int userid, String starttime,
			String enddtime) {
		String hql = "";
		String date = getnowDateManager().split("-")

		[0].toString() + "-" + getnowDateManager().split("-")[1].toString()

		+ "-01";
		Object[] values = { userid };
		if (date.equals(starttime)) {
			hql = "select    itmeid from Hour where userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + enddtime + "'";
		} else {
			hql = "select    itmeid from Hour where userid=? and todaydate>='"
					+ starttime + "' and todaydate<'" + enddtime + "'";
		}

		return objDao.getByParm(hql, values);

	}

	@SuppressWarnings("null")
	public int getHoursbyItemid(int itemid,String[] arr) {
		int a=0;
		String hql="";
		if(null==arr[0]){
			String date = getnowDateManager().split("-")
			[0].toString() + "-" + getnowDateManager().split("-")[1].toString()
			+ "-01";
			 hql = "from Hour where itmeid=? and todaydate>='"+date+"' and todaydate<='"+getnowDateManager()+"'";
		}else{
			 hql = "from Hour where itmeid=? and todaydate>='"+arr[0]+"'and todaydate<='"+arr[1]+"'";
		}
		Object[] values = {itemid};
	List list=objDao.getByParm(hql, values);
	if(null!=list||0!=list.size()){
		for(int i=0;i<list.size();i++){
		Hour h=(Hour) list.get(i);
		int b=Integer.parseInt(h.getHour());
		a+=b;
	}
	}
		return a;
	}
	
	//按项目分组得到一个项目所有人员的所有工时
	public Map<String,Integer> getHourByItemAllUser(String[] arr){
		
		String hql="";
		Map<String,Integer> hourMap = new HashMap<String,Integer>();
		if(null==arr[0]){
			String date = getnowDateManager().split("-")
			[0].toString() + "-" + getnowDateManager().split("-")[1].toString()
			+ "-01";
			 hql = "select itmeid,sum(hour)from Hour where todaydate>='"+date+"' and todaydate<='"+getnowDateManager()+"' group by itmeid";
		}else{
			 hql = "select itmeid,sum(hour)from Hour where todaydate>='"+arr[0]+"' and todaydate<='"+arr[1]+"' group by itmeid";
		}
	List list=objDao.getByParm(hql, null);
	for(int i=0;i<list.size();i++){
		Object[] obj = (Object[])list.get(i);
		String itemid = obj[0].toString();
		Integer hour = Integer.parseInt(obj[1].toString());
		hourMap.put(itemid, hour);
	}
	
	return hourMap;
	}
	public Map<String,Subsidy> getSubsidy() {
		Subsidy sub=null;
		List list=objDao.getAll("Subsidy");
		Map<String,Subsidy> subMap = new HashMap<String,Subsidy>();
        for(int i=0;i<list.size();i++){
        	Subsidy ss = (Subsidy)list.get(i);
        	subMap.put((ss.getUser().getId()+"").trim(), ss);
        }
		return subMap;
	}


	public List getallitem() {
	return	objDao.getAll("Item");
		
	}


	public void deletehourby(List user, List item) {
		String hql=" from Hour where userid=? and itmeid=?";
		for(int i=0;i<user.size();i++){
			for( int j=0;j<item.size();j++){
				Object[] values = {Integer.parseInt(user.get(i).toString()),Integer.parseInt(item.get(j).toString())};
				List list=objDao.getByParm(hql, values);
				for(int k=0;k<list.size();k++){
					objDao.delete(list.get(k));
				}
			}
		}
		
	}


	public void addHoursManager(List hourList) {
       this.objDao.save(hourList);		
	}


	public void updateHoursManager(List h) {
          
        this.objDao.update(h);
	}


	public Map getHourByItemUser(String[] arr) {
		Map<String,Integer> hourMap = new HashMap<String,Integer>();
		String hql = "";
		if(null==arr[0]){
			String date = getnowDateManager().split("-")
			[0].toString() + "-" + getnowDateManager().split("-")[1].toString()
			+ "-01";
			 hql = "select itmeid,userid,sum(hour) as hour from Hour where todaydate>='"+date+"' and todaydate<='"+getnowDateManager()+"' GROUP BY userid,itmeid";
		}else{
			 hql = "select itmeid,userid,sum(hour) as hour from Hour where todaydate>='"+arr[0]+"' and todaydate<='"+arr[1]+"' GROUP BY userid,itmeid";
		}
	     List list=objDao.getByParm(hql, null);
	     for(int i=0;i<list.size();i++){
	    	 Object[] obj = (Object[])list.get(i);
	    	 int itemid = (Integer)obj[0];
	    	 int userid = (Integer)obj[1];
	    	 int hour = Integer.parseInt(obj[2].toString());
	    	 hourMap.put((itemid+""+userid).trim(), hour);
	     }
		return hourMap;
	}

}
