package com.ruling.cost.user.action;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.ruling.cost.item.domain.ItemUser;
import com.ruling.cost.user.domain.User;
import com.ruling.cost.user.service.UserManager;
import com.ruling.cost.utils.BaseAction;

public class UserAction extends BaseAction {

	UserManager userService;
	
	private User user;
	
	private ItemUser itemuser;
	
	public ItemUser getItemuser() {
		return itemuser;
	}
	public void setItemuser(ItemUser itemuser) {
		this.itemuser = itemuser;
	}
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
	public UserManager getUserService() {
		return userService;
	}
	public void setUserService(UserManager userService) {
		this.userService = userService;
	}
	
	public String addInput(){
		
		return "user_add_input";
	}
	
	public String add(){
		
		this.userService.addUser(user);
		
		return "user_add_success";
	}
	
	public String updateInput(){
		
		this.getServletRequest().setAttribute("user", this.userService.findUserById(user.getId()));
		
		return "user_update_input";
	}
	
	public String update(){
		
		this.userService.updateUser(user);
		
		return "user_update_success";
	}
	
	public String delete(){
		
		String[] deleteid = user.getDeleteid().split(",");
		
		List userIdList = new ArrayList();
		
		for(int i=0;i<deleteid.length;i++){
			
			userIdList.add(Integer.parseInt(deleteid[i].trim()));
		}
		
		this.userService.delUser(userIdList);
		
		return "user_del_success";
	}
	
	public String browe(){
		
		this.getServletRequest().setAttribute("pm", this.userService.findAllUser(user));
		
		this.getServletRequest().setAttribute("user", user);
		
		return "user_browe";
	}
	
	public String login() throws Exception{
		
		if(user == null){
			
			return "login";
		}
		
		User u = this.userService.login(user.getUsername(), user.getPassword());
		
        ActionContext ct = ActionContext.getContext();
        
        Map session = ct.getSession();
        
        session.put("login", u);
        
		return "login_success";
	}
	
	public String selectBrowe(){
		
		this.getServletRequest().setAttribute("pm", this.userService.findAllUser(user));
		
		return "select_browe";
	}
	
	public String itemUserSelectBrowe(){
		
		if(itemuser != null){
			this.getServletRequest().setAttribute("itemid", itemuser.getItemid());
		}
		
		this.getServletRequest().setAttribute("pm", this.userService.findUserForItem(itemuser.getItemid()));
		
		return "itemUserSelectBrowe";
	}
    public String loginLeft(){
    	
    	return "loginLeft";
    }
    
    public String loginTitle(){
    	
    	return "loginTitle";
    }
    
    public String broweItemUser(){
    	
    	this.getServletRequest().setAttribute("pm", this.userService.findUserByItemId(itemuser.getItemid()));
    	
    	this.getServletRequest().setAttribute("itemuser", itemuser);
    	
    	return "broweItemUser";
    }
    
    //加载主页面下部页面
    public String loginBottom(){
    	
    	return "loginBottom";
    }
    
    //加载主页面桌面
    public String loginCenter(){
    	return "loginCenter";
    }
    
    //退出系统
    public String logout(){
    	
        ActionContext ct = ActionContext.getContext();
        
        Map session = ct.getSession();
        
        this.getServletRequest().getSession().setAttribute("login", null);
        session.remove("login");
        
        session.clear();
        
    	return "logout";
    }
    
    public String look(){
    	
    	this.getServletRequest().setAttribute("user", this.userService.findUserById(user.getId()));
    	
    	return "look";
    }
    //修改密码
    public String editPwd() throws Exception{
    	
        ActionContext ct = ActionContext.getContext();
        
        Map session = ct.getSession();
    	
    	User u = (User)session.get("login");
    	
    	u.setPassword(user.getPassword());
    	
    	u.setNewpwd(user.getNewpwd());
    	
    	this.userService.updatePwd(u);
    	
    	return "edit_pwd_success";
    }
    
    public String broweDeleteItemUser(){
    	
    	this.getServletRequest().setAttribute("pm", this.userService.findUserByItemId(itemuser.getItemid()));
    	
    	this.getServletRequest().setAttribute("itemuser", itemuser);
    	
    	return "broweDeleteItemUser";
    }
}
